/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ttsh.ifhaam.view;

import com.ttsh.ifhaam.controller.DataBaseController;
import com.ttsh.ifhaam.models.Subject;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Ahmed
 */
public class SubjectsSelector extends javax.swing.JFrame {
    private ArrayList<Subject> subjects;
    private ArrayList<Subject> selectedSubjects;
    
    class SelectedSujectTableModel extends DefaultTableModel{
        String[] columns = {"Code","Is Repeat","Year"};
            @Override
            public int getRowCount() {
                return selectedSubjects.size();
            }

            @Override
            public int getColumnCount() {
                return columns.length;
            }

            @Override
            public String getColumnName(int columnIndex) {
                return columns[columnIndex];
            }

            @Override
            public Class<?> getColumnClass(int columnIndex) {
                return String.class;
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }

            @Override
            public Object getValueAt(int rowIndex, int columnIndex) {
                Subject sbj = selectedSubjects.get(rowIndex);
                switch(columnIndex){
                    case 0:
                        return sbj.getSubjectCode();
                        
                    case 1:
                        return sbj.isIsRepeat()?"Yes":"No";
                        
                    case 2:
                        return sbj.getYear();
                        
                    default:
                        return "";
                }
            }

    }

    private void setOut() throws FileNotFoundException{
            PrintStream out = new PrintStream(new FileOutputStream("output.txt"));
           // System.setOut(out);
        }
    
    /**
     * Creates new form SubjectsSelector
     */
    public SubjectsSelector() throws FileNotFoundException {
        initComponents();
         setOut();
        subjects = new ArrayList<Subject>();
        selectedSubjects = new ArrayList<Subject>();
        tblSelectedSubjects.setModel(new SelectedSujectTableModel());
        txtEnrolledYear.setText(Calendar.getInstance().get(Calendar.YEAR)+"");
        btnLoadSubjects.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        frmAllSubjects = new javax.swing.JInternalFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSubjects = new javax.swing.JTable();
        btnLoadSubjects = new javax.swing.JButton();
        btnAddSubjects = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtEnrolledYear = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        spnYear = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        spnSem = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        rdBtnUndefined = new javax.swing.JRadioButton();
        rdBtnNo = new javax.swing.JRadioButton();
        rdBtnYes = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        frmSelectedSubjects = new javax.swing.JInternalFrame();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSelectedSubjects = new javax.swing.JTable();
        btnRemoveSelected = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jDesktopPane1.setBorder(new javax.swing.border.MatteBorder(null));

        frmAllSubjects.setIconifiable(true);
        frmAllSubjects.setMaximizable(false);
        frmAllSubjects.setResizable(false);
        frmAllSubjects.setTitle("Subjects Available");
        frmAllSubjects.setVisible(true);

        tblSubjects.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblSubjects.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jScrollPane1.setViewportView(tblSubjects);

        btnLoadSubjects.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnLoadSubjects.setText("Search");
        btnLoadSubjects.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadSubjectsActionPerformed(evt);
            }
        });

        btnAddSubjects.setText("Add Selected Subjects ");
        btnAddSubjects.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSubjectsActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Search Filters"));

        jLabel1.setText("Enrolled Year");

        txtEnrolledYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEnrolledYearActionPerformed(evt);
            }
        });

        jLabel2.setText("Year");

        jLabel3.setText("Semester");

        buttonGroup1.add(rdBtnUndefined);
        rdBtnUndefined.setSelected(true);
        rdBtnUndefined.setText("Undefined");
        rdBtnUndefined.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdBtnUndefinedActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdBtnNo);
        rdBtnNo.setText("No");

        buttonGroup1.add(rdBtnYes);
        rdBtnYes.setText("Yes");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(rdBtnYes, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(rdBtnNo)
                .addGap(18, 18, 18)
                .addComponent(rdBtnUndefined)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdBtnUndefined)
                    .addComponent(rdBtnNo)
                    .addComponent(rdBtnYes))
                .addGap(0, 4, Short.MAX_VALUE))
        );

        jLabel4.setText("Repeat");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel4)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtEnrolledYear, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spnYear, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(spnSem, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtEnrolledYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(spnYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(spnSem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)))
                .addContainerGap())
        );

        javax.swing.GroupLayout frmAllSubjectsLayout = new javax.swing.GroupLayout(frmAllSubjects.getContentPane());
        frmAllSubjects.getContentPane().setLayout(frmAllSubjectsLayout);
        frmAllSubjectsLayout.setHorizontalGroup(
            frmAllSubjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmAllSubjectsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frmAllSubjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frmAllSubjectsLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAddSubjects))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 585, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(frmAllSubjectsLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLoadSubjects, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        frmAllSubjectsLayout.setVerticalGroup(
            frmAllSubjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmAllSubjectsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frmAllSubjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLoadSubjects, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnAddSubjects)
                .addContainerGap())
        );

        frmSelectedSubjects.setIconifiable(true);
        frmSelectedSubjects.setMaximizable(false);
        frmSelectedSubjects.setResizable(false);
        frmSelectedSubjects.setTitle("Selected Subjects");
        frmSelectedSubjects.setVisible(true);

        tblSelectedSubjects.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblSelectedSubjects);

        btnRemoveSelected.setText("Remove Selected");
        btnRemoveSelected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveSelectedActionPerformed(evt);
            }
        });

        jButton5.setText("Next");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout frmSelectedSubjectsLayout = new javax.swing.GroupLayout(frmSelectedSubjects.getContentPane());
        frmSelectedSubjects.getContentPane().setLayout(frmSelectedSubjectsLayout);
        frmSelectedSubjectsLayout.setHorizontalGroup(
            frmSelectedSubjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmSelectedSubjectsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frmSelectedSubjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                    .addGroup(frmSelectedSubjectsLayout.createSequentialGroup()
                        .addComponent(btnRemoveSelected)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5)))
                .addContainerGap())
        );
        frmSelectedSubjectsLayout.setVerticalGroup(
            frmSelectedSubjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmSelectedSubjectsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(frmSelectedSubjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemoveSelected)
                    .addComponent(jButton5))
                .addContainerGap())
        );

        jDesktopPane1.setLayer(frmAllSubjects, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(frmSelectedSubjects, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(frmAllSubjects, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(frmSelectedSubjects, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(frmAllSubjects)
                    .addComponent(frmSelectedSubjects))
                .addContainerGap(7, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoadSubjectsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadSubjectsActionPerformed
        // TODO add your handling code here:
        DataBaseController dbc = DataBaseController.newInstance();
        //prepare parameter for the database call
        int year = 0;
        int offeredYear=0;
        int offeredSem=0;
        try{
            year = Integer.parseInt(txtEnrolledYear.getText());
            offeredYear = Integer.parseInt(spnYear.getValue()+"");
            offeredSem = Integer.parseInt(spnSem.getValue()+"");
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(rootPane,"Invalid value zero will be initialized for all ", "Error", JOptionPane.INFORMATION_MESSAGE);
            
        }
        
        //set value for repeat
        int repeat=-1;
        if(rdBtnYes.isSelected()) repeat=1;
        else if(rdBtnNo.isSelected())repeat=0;
        
        subjects = dbc.getSubjects(year+"", offeredYear, offeredSem, repeat);
        tblSubjects.setModel(new TableModel() {
            String [] columns = {"Subject Code","Enrolled Year","Year","Semester","Repeat"};
            @Override
            public int getRowCount() {
                return subjects.size();
            }

            @Override
            public int getColumnCount() {
                return columns.length;
            }

            @Override
            public String getColumnName(int columnIndex) {
                return columns[columnIndex];
            }

            @Override
            public Class<?> getColumnClass(int columnIndex) {
                return String.class;
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }

            @Override
            public Object getValueAt(int rowIndex, int columnIndex) {
                Subject sbj =subjects.get(rowIndex);
                switch(columnIndex){
                    case 0:
                        return sbj.getSubjectCode();
                    case 1:
                        return sbj.getWritingYear();
                        
                    case 2:
                        return sbj.getYear();
                        
                    case 3:
                        return sbj.getSemester();
                        
                    case 4:
                        return sbj.isIsRepeat()?"Yes":"No";
                        
                    default:
                        return "";
                            
                }
                
            }

            @Override
            public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
                JOptionPane.showMessageDialog(rootPane, "You cant edit data here", "Denied", JOptionPane.WARNING_MESSAGE);
                
            }

            @Override
            public void addTableModelListener(TableModelListener l) {
                //JOptionPane.showMessageDialog(rootPane, "You cant edit data here", "Denied", JOptionPane.WARNING_MESSAGE);
            }

            @Override
            public void removeTableModelListener(TableModelListener l) {
                //JOptionPane.showMessageDialog(rootPane, "Table model Listner removel", "Denied", JOptionPane.WARNING_MESSAGE);
            }
        });
        
        
        
    }//GEN-LAST:event_btnLoadSubjectsActionPerformed

    private void btnAddSubjectsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSubjectsActionPerformed
        // TODO add your handling code here:
        int[] indices = tblSubjects.getSelectedRows();
        System.out.println("Selected Indices size : "+indices.length);
        for(int index : indices ){
            System.out.println("selected row : "+index);
            Subject sbj = subjects.get(index);
            if(!selectedSubjects.contains(sbj))
                selectedSubjects.add(sbj);
        }
        ((DefaultTableModel)tblSelectedSubjects.getModel()).fireTableDataChanged();
    }//GEN-LAST:event_btnAddSubjectsActionPerformed

    private void btnRemoveSelectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveSelectedActionPerformed
        // TODO add your handling code here:
        int result = JOptionPane.showConfirmDialog(rootPane, "Are you sure want to remove selected Subjects", "Confirm ?", JOptionPane.YES_NO_OPTION);
        if(result == JOptionPane.YES_OPTION){
            int[] indices = tblSelectedSubjects.getSelectedRows();
            ArrayList<Subject> subjectsToRemove = new ArrayList<>();
            for(int index:indices )
                subjectsToRemove.add(selectedSubjects.get(index));
            for(Subject sbj:subjectsToRemove)
                selectedSubjects.remove(sbj);
            ((DefaultTableModel)tblSelectedSubjects.getModel()).fireTableDataChanged();
        }
        
    }//GEN-LAST:event_btnRemoveSelectedActionPerformed

    private void txtEnrolledYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEnrolledYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEnrolledYearActionPerformed

    private void rdBtnUndefinedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdBtnUndefinedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdBtnUndefinedActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        System.out.println(selectedSubjects.size()+" size of total");
        this.dispose();
        new MakeExams(selectedSubjects).setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SubjectsSelector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SubjectsSelector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SubjectsSelector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SubjectsSelector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new SubjectsSelector().setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(SubjectsSelector.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddSubjects;
    private javax.swing.JButton btnLoadSubjects;
    private javax.swing.JButton btnRemoveSelected;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JInternalFrame frmAllSubjects;
    private javax.swing.JInternalFrame frmSelectedSubjects;
    private javax.swing.JButton jButton5;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton rdBtnNo;
    private javax.swing.JRadioButton rdBtnUndefined;
    private javax.swing.JRadioButton rdBtnYes;
    private javax.swing.JSpinner spnSem;
    private javax.swing.JSpinner spnYear;
    private javax.swing.JTable tblSelectedSubjects;
    private javax.swing.JTable tblSubjects;
    private javax.swing.JTextField txtEnrolledYear;
    // End of variables declaration//GEN-END:variables
}
