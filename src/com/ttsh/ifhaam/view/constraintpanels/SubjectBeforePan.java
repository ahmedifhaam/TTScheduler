/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ttsh.ifhaam.view.constraintpanels;

import com.ttsh.ifhaam.models.Constraints.Constraint;
import java.awt.BorderLayout;
import java.awt.event.ItemEvent;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Ahmed
 */
public class SubjectBeforePan extends javax.swing.JPanel implements ConstraintValueater {
    private static String[] selectionMethods = {"Select by Credit","Select by year","Select by Subject"};
    
    /**
     * Creates new form SubjectBeforePan
     */
    public SubjectBeforePan() {
        initComponents();
        
        cmbSelectionType.setModel(new DefaultComboBoxModel(selectionMethods));
        typePanel.removeAll();
        typePanel.setLayout(new BorderLayout());
        typePanel.add(new CreditBeforeDayPan());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbSelectionType = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        typePanel = new javax.swing.JPanel();

        cmbSelectionType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbSelectionType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSelectionTypeItemStateChanged(evt);
            }
        });

        jLabel1.setText("Selection Type");

        javax.swing.GroupLayout typePanelLayout = new javax.swing.GroupLayout(typePanel);
        typePanel.setLayout(typePanelLayout);
        typePanelLayout.setHorizontalGroup(
            typePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        typePanelLayout.setVerticalGroup(
            typePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 225, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(typePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbSelectionType, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbSelectionType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(typePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbSelectionTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSelectionTypeItemStateChanged
        // TODO add your handling code here:
        if(evt.getStateChange()==ItemEvent.SELECTED){
            typePanel.removeAll();
            typePanel.setLayout(new BorderLayout());
            switch(cmbSelectionType.getSelectedIndex()){
               
                case 0:
                    System.out.println("test 0");
                    
                    typePanel.add(new CreditBeforeDayPan());
                    break;
                    
                case 1:
                    System.out.println("test 1");
                    typePanel.add(new OfferedYearBeforeDayPan());
                    break;
                    
                case 2:
                    System.out.println("test 2 ");
                    typePanel.add(new SubjectBeforeSubject());
                    break;
                   
                default:
                    
                    typePanel.add(new CreditBeforeDayPan());
                    break;
            }
        }
    }//GEN-LAST:event_cmbSelectionTypeItemStateChanged

    @Override
    public Constraint getConstraint() throws ConstraintException {
        ConstraintValueater val = (ConstraintValueater)typePanel.getComponent(0);
        return val.getConstraint();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbSelectionType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel typePanel;
    // End of variables declaration//GEN-END:variables
}
