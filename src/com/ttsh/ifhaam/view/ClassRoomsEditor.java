/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ttsh.ifhaam.view;

import com.ttsh.ifhaam.controller.DataBaseController;
import com.ttsh.ifhaam.models.ClassRoom;
import com.ttsh.ifhaam.models.ClassRoomListCellRenderer;
import com.ttsh.ifhaam.models.CombinedClassRoom;
import com.ttsh.ifhaam.models.SingleClassRoom;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.ArrayList;
import javax.swing.ButtonGroup;
import javax.swing.ButtonModel;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListCellRenderer;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 *
 * @author Ahmed
 */
public class ClassRoomsEditor extends javax.swing.JFrame implements ItemListener {

    /**
     * Creates new form ClassRooms
     */
    public ClassRoomsEditor() {
        initComponents();
        rdBtnSingle.setSelected(true);
        rdBtnSingle.addItemListener(this);
        combinationPanel.setVisible(false);
        btnRemoveSelected.setToolTipText("Remove selected rooms from selected rooms list");
        btnAddSelected.setToolTipText("Add selected items to the selected rooms list");
        pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtRoomName = new javax.swing.JTextField();
        txtRoomSize = new javax.swing.JSpinner();
        combinationPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstAvailableRooms = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstAddedRooms = new javax.swing.JList<>();
        btnAddSelected = new javax.swing.JButton();
        btnRemoveSelected = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        rdBtnSingle = new javax.swing.JRadioButton();
        rdBtnCombined = new javax.swing.JRadioButton();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Class Room Name ");

        jLabel2.setText("Size");

        combinationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Class Rooms Combined"));

        jScrollPane1.setViewportView(lstAvailableRooms);

        jLabel4.setText("Classrooms Available");

        jLabel5.setText("Class Rooms Combined");

        jScrollPane2.setViewportView(lstAddedRooms);

        btnAddSelected.setText(">");
        btnAddSelected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSelectedActionPerformed(evt);
            }
        });

        btnRemoveSelected.setText("X");
        btnRemoveSelected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveSelectedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout combinationPanelLayout = new javax.swing.GroupLayout(combinationPanel);
        combinationPanel.setLayout(combinationPanelLayout);
        combinationPanelLayout.setHorizontalGroup(
            combinationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, combinationPanelLayout.createSequentialGroup()
                .addGroup(combinationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(combinationPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4))
                    .addGroup(combinationPanelLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddSelected)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(26, 26, 26)
                .addGroup(combinationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(combinationPanelLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(48, 48, 48))
                    .addGroup(combinationPanelLayout.createSequentialGroup()
                        .addComponent(btnRemoveSelected)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))))
        );
        combinationPanelLayout.setVerticalGroup(
            combinationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(combinationPanelLayout.createSequentialGroup()
                .addGroup(combinationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(combinationPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(combinationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(combinationPanelLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(combinationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddSelected)
                            .addComponent(btnRemoveSelected))))
                .addGap(18, 18, 18)
                .addGroup(combinationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4))
                .addGap(0, 18, Short.MAX_VALUE))
        );

        jLabel3.setText("Type");

        buttonGroup1.add(rdBtnSingle);
        rdBtnSingle.setText("Single");

        buttonGroup1.add(rdBtnCombined);
        rdBtnCombined.setText("Combined");

        btnAdd.setText("Add");

        btnDelete.setText("Delete");

        btnEdit.setText("Edit");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(combinationPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtRoomName)
                                        .addComponent(txtRoomSize, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rdBtnSingle)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(rdBtnCombined)))))))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtRoomName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtRoomSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(rdBtnSingle)
                    .addComponent(rdBtnCombined))
                .addGap(26, 26, 26)
                .addComponent(combinationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnDelete)
                    .addComponent(btnEdit)
                    .addComponent(btnSave))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddSelectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSelectedActionPerformed
        // TODO add your handling code here:
        
        int[] selectedindexes = lstAvailableRooms.getSelectedIndices();
        for(int index :selectedindexes){
            ClassRoom cr  = lstAvailableRooms.getModel().getElementAt(index);
            
            if(!((DefaultListModel)lstAddedRooms.getModel()).contains(cr))
                ((DefaultListModel)lstAddedRooms.getModel()).addElement(cr);
        }
        
        countSize();
    }//GEN-LAST:event_btnAddSelectedActionPerformed

    private void countSize(){
        int totalRoomSize=0;
        
        for(int i=0;i<((DefaultListModel)lstAddedRooms.getModel()).getSize();i++){
            totalRoomSize+= lstAddedRooms.getModel().getElementAt(i).getSize();
        }
        
        txtRoomSize.setValue(totalRoomSize);
    }
    
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        DataBaseController dbController = DataBaseController.newInstance();
        ClassRoom cr;
        if(rdBtnSingle.isSelected()){
            cr = new SingleClassRoom((int)txtRoomSize.getValue(),txtRoomName.getText());
        }else{
            cr = new CombinedClassRoom((int)txtRoomSize.getValue(),txtRoomName.getText());
            lstAddedRooms.setSelectionInterval(0, lstAddedRooms.getModel().getSize()-1);
            for(ClassRoom classRoom :lstAddedRooms.getSelectedValuesList()){
                ((CombinedClassRoom)cr).addClassRoom(classRoom);
            }
            System.out.println(((CombinedClassRoom)cr).getCombinedRooms().size()+" is the size");
        }
        if(dbController.insertOrUpdateClassRoom(cr)){
            JOptionPane.showMessageDialog(this, "Sucess Update","Success",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnRemoveSelectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveSelectedActionPerformed
        // TODO add your handling code here:
        int[] selectedindexes = lstAddedRooms.getSelectedIndices();
        if(selectedindexes.length>0){
            ((DefaultListModel)lstAddedRooms.getModel()).removeRange(selectedindexes[0], selectedindexes[selectedindexes.length-1]);
            countSize();
        }
        //while(selectedindexes.length!=0 ){
          //  lstAddedRooms.removeSelectionInterval(selecte, WIDTH);
        //}
        
    }//GEN-LAST:event_btnRemoveSelectedActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClassRoomsEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClassRoomsEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClassRoomsEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClassRoomsEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClassRoomsEditor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAddSelected;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnRemoveSelected;
    private javax.swing.JButton btnSave;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JPanel combinationPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<ClassRoom> lstAddedRooms;
    private javax.swing.JList<ClassRoom> lstAvailableRooms;
    private javax.swing.JRadioButton rdBtnCombined;
    private javax.swing.JRadioButton rdBtnSingle;
    private javax.swing.JTextField txtRoomName;
    private javax.swing.JSpinner txtRoomSize;
    // End of variables declaration//GEN-END:variables

    @Override
    public void itemStateChanged(ItemEvent e) {
        Object source = e.getItemSelectable();
        if(source == rdBtnSingle){
            if(e.getStateChange()==ItemEvent.DESELECTED){
                //show the panel
                combinationPanel.setVisible(true);
                addClassRoomsAvailableToTheList();
                this.pack();
            }else if(e.getStateChange()==ItemEvent.SELECTED ){
                //hide the panel
                combinationPanel.setVisible(false);
                this.pack();
            }
        }
    }
    
    private void addClassRoomsAvailableToTheList(){
        DataBaseController dbc = DataBaseController.newInstance();
        ArrayList<ClassRoom> clssRooms = dbc.getSingleClassRooms();
        DefaultListModel<ClassRoom> listModel = new DefaultListModel();
        for(ClassRoom cr :clssRooms){
            if(!listModel.contains(cr))
            listModel.addElement(cr);
        }
        lstAvailableRooms.setModel(listModel);
        lstAvailableRooms.setCellRenderer(new ClassRoomListCellRenderer());
        lstAddedRooms.setModel(new DefaultListModel<ClassRoom>());
        lstAddedRooms.setCellRenderer(new ClassRoomListCellRenderer());
    }
}
    
    
    

